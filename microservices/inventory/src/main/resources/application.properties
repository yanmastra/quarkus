quarkus.http.port=10002
quarkus.datasource.db-kind=mysql
quarkus.datasource.username=${MYSQL_USERNAME}
quarkus.datasource.password=${MYSQL_PASSWORD}
quarkus.datasource.reactive.url=vertx-reactive:mysql://${MYSQL_HOST}:${MYSQL_PORT}/db_inventories?serverTimezone=UTC&timezone=UTC
quarkus.hibernate-orm.database.generation=update
quarkus.datasource.jdbc=false

#authorization
authorization.public-path=/*
authorization.service-url=http://localhost:10001/api/v1/auth/authorize
authorization.service-base-url=http://localhost:10001
authorization.default-redirect="/"

#kafka
kafka.bootstrap.servers=${KAFKA_BOOTSTRAP_URL:-localhost:19092}
kafka.max.request.size=1000000000
max.partition.fetch.bytes=100000000

mp.messaging.incoming.inventory.connector=smallrye-kafka
mp.messaging.incoming.inventory.topic=stock
mp.messaging.incoming.inventory.value.deserializer=org.acme.microservices.common.messaging.Deserializer
mp.messaging.incoming.inventory.auto.offset.reset=earliest

mp.messaging.outgoing.productUpdate.connector=smallrye-kafka
mp.messaging.outgoing.productUpdate.value.serializer=org.acme.microservices.common.messaging.Serializer
mp.messaging.outgoing.productUpdate.topic=productUpdate
mp.messaging.outgoing.productUpdate.auto.offset.reset=earliest